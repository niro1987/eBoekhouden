[metadata]
name = eboekhouden
version = 0.0.1
author = Niels Perfors
author_email = niels@perfors.dev
description = A Python client to interact with e-Boekhouden.nl
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/niro1987/eboekhouden
project_urls =
    Documentation = https://github.com/niro1987/eboekhouden
    Source = https://github.com/niro1987/eboekhouden
    Tracker = https://github.com/niro1987/eboekhouden/issues
platforms = any
classifiers =
    Development Status :: Development Status :: 2 - Pre-Alpha
    Programming Language :: Python :: 3.10
    Operating System :: OS Independent
    License :: OSI Approved :: MIT License
license = MIT

[options]
zip_safe = False
packages = find:
python_requires = >=3.10
install_requires =
    zeep == 4.2.1
    dataclass_factory == 2.16

[options.extras_require]
dev =
    black == 22.12.0
    flake8 == 6.0.0
    isort == 5.11.3
    pylint == 2.15.9
    pytest == 7.2.0
    pytest-dotenv == 0.5.2

[options.packages.find]
exclude =
    tests

[isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
# splits long import on multiple lines indented by 4 spaces
multi_line_output = 3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
indent = "    "
# by default isort don't check module indexes
not_skip = __init__.py
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
sections = FUTURE,STDLIB,INBETWEENS,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
known_first_party = eboekhouden
combine_as_imports = true

[flake8]
exclude =
    .venv,
    .vscode,
    .git

doctests = True
# To work with Black
max-line-length = 88
# E501: line too long
# W503: Line break occurred before a binary operator
# E203: Whitespace before ':'
# D202 No blank lines allowed after function docstring
# W504 line break after binary operator
ignore =
    E501,
    W503,
    E203,
    D202,
    W504

[tool:pytest]
testpaths =
    tests
env_files =
    .env
log_cli = 1
log_cli_level=DEBUG
log_cli_format = %(levelname)s - %(message)s
log_cli_date_format = %d-%m-%Y %H:%M:%S

[pylint]
disable=duplicate-code

[pylint.logging]
logging-modules=logging

[pylint.miscellaneous]
notes=
    FIXME,
    TODO
